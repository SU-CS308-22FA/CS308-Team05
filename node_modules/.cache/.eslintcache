[{"C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\index.js":"1","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\reportWebVitals.js":"2","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\App.js":"3","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\Login.js":"4","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\Sign_Up.js":"5","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\User.js":"6"},{"size":648,"mtime":1667984126492,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1667318864565,"results":"9","hashOfConfig":"8"},{"size":836,"mtime":1667980422482,"results":"10","hashOfConfig":"8"},{"size":2112,"mtime":1667980373290,"results":"11","hashOfConfig":"8"},{"size":2519,"mtime":1667980351237,"results":"12","hashOfConfig":"8"},{"size":3418,"mtime":1667980299141,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cftsrs",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\index.js",[],[],"C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\App.js",["37","38","39","40","41"],[],"import React, { useState } from \"react\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Login } from \"./pages/Login\";\r\nimport { Sign_Up } from \"./pages/Sign_Up\";\r\nimport { User } from \"./pages/User\";\r\nimport {BrowserRouter as Router, Switch, Route, Link, NavLink} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  global.fullname = \"\";\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      <img src=\"/images/Logo.png\" alt=\"\"/>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n              <Login />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <Sign_Up />\r\n          </Route>\r\n          <Route exact path=\"/user\">\r\n            <User />\r\n          </Route>\r\n        </Switch>\r\n        <img src=\"/images/rate12.png\" alt=\"\"/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\Login.js",["42"],[],"import React, {useEffect, useState} from \"react\"\r\nimport Axios from 'axios'\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nexport const Login = (props) => {\r\n    const [identification, setID] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [loginstatus, setLoginstatus] = useState(\"\");\r\n\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(identification);\r\n    }\r\n\r\n    const login = () => {\r\n        Axios.post(\"http://localhost:3001/login\", {\r\n            identification: identification,  \r\n            password: pass,\r\n        }).then((response)=> {\r\n            if (response.data.message){\r\n                setLoginstatus(response.data.message);\r\n            } else {\r\n                global.fullname = response.data[0].FullName;\r\n                history.push('/User');\r\n            }\r\n        });\r\n    };\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect (() => {\r\n        Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n            if (response.data.loggedIn === true){\r\n                setLoginstatus(\"\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <form className=\"login-form\" onSubmit = {handleSubmit}>\r\n                <label htmlFor = \"email\">Username</label>\r\n                <input value={identification} onChange={(e) => setID(e.target.value)} type = \"text\" placeholder = \"username\" id = \"identification\" name = \"identification\"/>\r\n                <label htmlFor = \"password\">Password</label>\r\n                <input value = {pass} onChange={(e) => setPass(e.target.value)} type = \"password\" placeholder = \"********\" id = \"password\" name = \"password\"/>\r\n                <button onClick={login}>Log In</button>\r\n            </form>\r\n            <button className = \"link-btn\" onClick={() => history.push('/signup')}>Don't have an account? Create new account.</button>\r\n            <h1>\r\n                {loginstatus}\r\n            </h1>\r\n        </div>\r\n    );\r\n}","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\Sign_Up.js",["43"],[],"import React, {useState} from \"react\"\r\nimport Axios from 'axios'\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\nexport const Sign_Up = (props) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [signupstatus, setSignupstatus] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(email);\r\n    }\r\n\r\n    Axios.defaults.withCredentials = true;\r\n    const signup = () => {\r\n        if (name !== \"\" || username !== \"\" || email !== \"\" || pass !== \"\") {\r\n        Axios.post(\"http://localhost:3001/signup\", {\r\n            fullname: name, \r\n            username: username, \r\n            email: email, \r\n            password: pass\r\n        }).then((response)=> {\r\n            console.log(response);\r\n            global.fullname = response.data[0].FullName;\r\n            setSignupstatus(\"Registered\");\r\n            history.push('/User');\r\n        });\r\n        } else {\r\n            setSignupstatus(\"There is an empty field\");\r\n        }\r\n        global.fullname = name;\r\n        history.push('/User');\r\n    };\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className = \"auth-form-container\">\r\n            <h2>Sign Up</h2>\r\n            <form className=\"sign_up-form\" onSubmit = {handleSubmit}>\r\n                <label htmlFor = \"name\">Full Name</label>\r\n                <input onChange={(e) => setName(e.target.value)} name = \"name\" id = \"name\" placeholder = \"Full Name\"/>\r\n                <label htmlFor = \"username\">Username</label>\r\n                <input onChange={(e) => setUsername(e.target.value)} type = \"username\" name = \"username\" id = \"username\" placeholder = \"Username\"/>\r\n                <label htmlFor = \"email\">Email</label>\r\n                <input onChange={(e) => setEmail(e.target.value)} type = \"email\" id = \"email\" name = \"email\" placeholder = \"email@gmail.com\"/>\r\n                <label htmlFor = \"password\">Password</label>\r\n                <input onChange={(e) => setPassword(e.target.value)} type = \"password\" id = \"password\" name = \"password\" placeholder = \"********\"/>\r\n                <button onClick={signup}>Sign Up Now!</button>\r\n            </form>\r\n            <button className = \"link-btn\" onClick={() => history.push('/')}>Already have an account? Login here.</button>\r\n            <h1>\r\n                {signupstatus}\r\n            </h1>\r\n        </div>\r\n    );\r\n}","C:\\Users\\egeme\\OneDrive\\Belgeler\\CS308 frontend\\CS308-Team05\\src\\pages\\User.js",["44"],[],"import React, {useState} from \"react\"\r\nimport Axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const User = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [loginstatus, setLoginstatus] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(email);\r\n  }\r\n\r\n  const updateusername = () => {\r\n    Axios.post(\"http://localhost:3001/updateusername\", {\r\n        id: global.fullname,  \r\n        username: username,\r\n    }).then((response)=> {\r\n        if (response.data.message){\r\n            setLoginstatus(response.data.message);\r\n        } else {\r\n            setLoginstatus(response.data[0].Username);\r\n            global.fullname = response.data[0].FullName;\r\n        }\r\n    });\r\n  };\r\n\r\n  const updateemail = () => {\r\n    Axios.post(\"http://localhost:3001/updateemail\", {\r\n        id: global.fullname,  \r\n        email: email,\r\n    }).then((response)=> {\r\n        if (response.data.message){\r\n            setLoginstatus(response.data.message);\r\n        } else {\r\n            setLoginstatus(response.data[0].Username);\r\n            global.fullname = response.data[0].FullName;\r\n        }\r\n    });\r\n  };\r\n\r\n  const updatepassword = () => {\r\n    Axios.post(\"http://localhost:3001/updatepassword\", {\r\n        id: global.fullname,  \r\n        password: pass,\r\n    }).then((response)=> {\r\n        if (response.data.message){\r\n            setLoginstatus(response.data.message);\r\n        } else {\r\n            setLoginstatus(response.data[0].Username);\r\n            global.fullname = response.data[0].FullName;\r\n        }\r\n    });\r\n  };\r\n\r\n  const deleteuser = () => {\r\n    Axios.post(\"http://localhost:3001/deleteuser\", {\r\n        id: global.fullname,  \r\n    }).then((response)=> {\r\n        if (response.data.message){\r\n            setLoginstatus(response.data.message);\r\n        } else {\r\n            setLoginstatus(response.data[0].Username);\r\n            global.fullname = \"\";\r\n            history.push('/');\r\n        }\r\n    });\r\n    history.push('/');\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n      <div className = \"auth-form-container\">\r\n          <h2>User Settings</h2>\r\n          <form className=\"user-form\" onSubmit = {handleSubmit}>\r\n              <label htmlFor = \"username\">Username Change</label>\r\n              <input onChange={(e) => setUsername(e.target.value)} type = \"username\" name = \"username\" id = \"username\" placeholder = \"Username\"/>\r\n              <button onClick={updateusername}>Change Now!</button>\r\n              <label htmlFor = \"email\">Email Change</label>\r\n              <input onChange={(e) => setEmail(e.target.value)} type = \"email\" id = \"email\" name = \"email\" placeholder = \"email@gmail.com\"/>\r\n              <button onClick={updateemail}>Change Now!</button>\r\n              <label htmlFor = \"password\">Password Change</label>\r\n              <input onChange={(e) => setPassword(e.target.value)} type = \"password\" id = \"password\" name = \"password\" placeholder = \"**\"/>\r\n              <button onClick={updatepassword}>Change Now!</button>\r\n              <label> </label>\r\n              <button onClick={deleteuser} color = \"red\" >Delete User</button>\r\n              <label> </label>\r\n              <button onClick={() => history.push('/')}>Sign Out</button>\r\n          </form>\r\n      </div>\r\n  );\r\n}",{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":12},{"ruleId":"45","severity":1,"message":"50","line":7,"column":49,"nodeType":"47","messageId":"48","endLine":7,"endColumn":53},{"ruleId":"45","severity":1,"message":"51","line":7,"column":55,"nodeType":"47","messageId":"48","endLine":7,"endColumn":62},{"ruleId":"52","severity":1,"message":"53","line":22,"column":13,"nodeType":"54","messageId":"55","endLine":22,"endColumn":24},{"ruleId":"45","severity":1,"message":"56","line":3,"column":22,"nodeType":"47","messageId":"48","endLine":3,"endColumn":30},{"ruleId":"45","severity":1,"message":"56","line":3,"column":22,"nodeType":"47","messageId":"48","endLine":3,"endColumn":30},{"ruleId":"45","severity":1,"message":"57","line":9,"column":10,"nodeType":"47","messageId":"48","endLine":9,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","react/jsx-pascal-case","Imported JSX component Sign_Up must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'Redirect' is defined but never used.","'loginstatus' is assigned a value but never used."]